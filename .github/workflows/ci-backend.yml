name: CI Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.17.0'
        cache: 'yarn'
        cache-dependency-path: backend/yarn.lock

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install dependencies
      working-directory: backend
      run: yarn install --frozen-lockfile

    - name: Run linter
      working-directory: backend
      run: yarn lint
    
    - name: Type-check only (no emit)
      working-directory: backend
      run: yarn tsc --noEmit
    
    - name: Install Snyk & test for vulnerabilities
      working-directory: backend
      run: |
        yarn global add snyk
        snyk auth ${{ secrets.SNYK_TOKEN }}
        snyk test --severity-threshold=high
        snyk monitor

    # - name: Run tests
    #   working-directory: backend
    #   env:
    #     DATABASE_URL: postgresql://postgres:example@localhost:5432/test
    #     JWT_SECRET: ThisMustBeChanged
    #     JWT_ISSUER: IssuerApplication
    #     HEALTH_TOKEN: ThisMustBeChanged
    #     API_PORT: 3000
    #     API_PREFIX: /api/v1
    #     SWAGGER_ENABLE: 1
    #     PASSENGERS_ALLOWED: yes
    #   run: yarn test

    - name: Build
      working-directory: backend
      run: yarn build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist
        retention-days: 5
